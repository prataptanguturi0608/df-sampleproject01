{
	"name": "SilverToGolddataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_dlake_silver_OrderItems",
						"type": "DatasetReference"
					},
					"name": "OrderItems"
				},
				{
					"dataset": {
						"referenceName": "ds_dlake_silver_Orders",
						"type": "DatasetReference"
					},
					"name": "Orders"
				},
				{
					"dataset": {
						"referenceName": "ds_dlake_silver_Products",
						"type": "DatasetReference"
					},
					"name": "Products"
				},
				{
					"dataset": {
						"referenceName": "ds_dlake_silver_Customers",
						"type": "DatasetReference"
					},
					"name": "Customers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_AzureSqlDBTbl",
						"type": "DatasetReference"
					},
					"name": "SQLDW"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select2"
				},
				{
					"name": "join3"
				},
				{
					"name": "select3"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_ID as integer,",
				"          LINE_ITEM_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as integer,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string,",
				"          Count as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> OrderItems",
				"source(output(",
				"          ORDER_ID as integer,",
				"          ORDER_DATETIME as string,",
				"          ORDER_STATUS as string,",
				"          CUSTOMER_ID as integer,",
				"          STORE_ID as integer,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Orders",
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_NAME as string,",
				"          UNIT_PRICE as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Products",
				"source(output(",
				"          CUSTOMER_ID as integer,",
				"          FULL_NAME as string,",
				"          EMAIL_ADDRESS as string,",
				"          Ingestion_by as string,",
				"          Ingestion_Date as string,",
				"          Ingestion_TimeStamp as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Customers",
				"OrderItems, Orders join(OrderItems@ORDER_ID == Orders@ORDER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          ORDER_ID = OrderItems@ORDER_ID,",
				"          LINE_ITEM_ID,",
				"          PRODUCT_ID,",
				"          UNIT_PRICE,",
				"          QUANTITY,",
				"          Ingestion_by = OrderItems@Ingestion_by,",
				"          Ingestion_TimeStamp = OrderItems@Ingestion_TimeStamp,",
				"          Ingestion_Date = OrderItems@Ingestion_Date,",
				"          ORDER_ID = Orders@ORDER_ID,",
				"          ORDER_DATETIME,",
				"          ORDER_STATUS,",
				"          CUSTOMER_ID,",
				"          STORE_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, Products join(select1@PRODUCT_ID == Products@PRODUCT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          ORDER_ID,",
				"          LINE_ITEM_ID,",
				"          PRODUCT_ID = select1@PRODUCT_ID,",
				"          UNIT_PRICE = select1@UNIT_PRICE,",
				"          QUANTITY,",
				"          Ingestion_by,",
				"          Ingestion_TimeStamp,",
				"          Ingestion_Date,",
				"          ORDER_DATETIME,",
				"          ORDER_STATUS,",
				"          CUSTOMER_ID,",
				"          STORE_ID,",
				"          PRODUCT_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, Customers join(select2@CUSTOMER_ID == Customers@CUSTOMER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          ORDER_ID,",
				"          LINE_ITEM_ID,",
				"          PRODUCT_ID,",
				"          UNIT_PRICE,",
				"          QUANTITY,",
				"          Ingestion_by = select2@Ingestion_by,",
				"          Ingestion_TimeStamp = select2@Ingestion_TimeStamp,",
				"          Ingestion_Date = select2@Ingestion_Date,",
				"          ORDER_DATETIME,",
				"          ORDER_STATUS,",
				"          CUSTOMER_ID = select2@CUSTOMER_ID,",
				"          STORE_ID,",
				"          PRODUCT_NAME,",
				"          FULL_NAME,",
				"          EMAIL_ADDRESS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 aggregate(groupBy(ORDER_ID,",
				"          PRODUCT_ID,",
				"          LINE_ITEM_ID,",
				"          UNIT_PRICE,",
				"          QUANTITY,",
				"          ORDER_DATETIME,",
				"          ORDER_STATUS,",
				"          CUSTOMER_ID,",
				"          STORE_ID,",
				"          PRODUCT_NAME,",
				"          FULL_NAME,",
				"          EMAIL_ADDRESS,",
				"          Ingestion_by,",
				"          Ingestion_TimeStamp,",
				"          Ingestion_Date),",
				"     count = count()) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          ORDER_ID,",
				"          PRODUCT_ID,",
				"          LINE_ITEM_ID,",
				"          UNIT_PRICE,",
				"          QUANTITY,",
				"          ORDER_DATETIME,",
				"          ORDER_STATUS,",
				"          CUSTOMER_ID,",
				"          STORE_ID,",
				"          PRODUCT_NAME,",
				"          FULL_NAME,",
				"          EMAIL_ADDRESS,",
				"          Ingestion_by,",
				"          Ingestion_TimeStamp,",
				"          Ingestion_Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SQLDW"
			]
		}
	}
}