{
	"name": "BronzeTosilverdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_dlake_bronze_txt",
						"type": "DatasetReference"
					},
					"name": "customersData"
				},
				{
					"name": "OrderItemsData"
				},
				{
					"name": "OrdersData"
				},
				{
					"name": "ProductsData"
				},
				{
					"name": "StoresData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dlake_silver_Parquet",
						"type": "DatasetReference"
					},
					"name": "CustomersDataSink"
				},
				{
					"name": "OrderItemsSink"
				},
				{
					"name": "OrdersSink"
				},
				{
					"name": "ProductsSink"
				},
				{
					"name": "StoresSink"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> customersData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> OrderItemsData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> OrdersData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> ProductsData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> StoresData",
				"customersData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMER_ID as integer,",
				"          FULL_NAME as string,",
				"          EMAIL_ADDRESS as string,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CustomersDataSink",
				"OrderItemsData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrderItemsSink",
				"OrdersData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrdersSink",
				"ProductsData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ProductsSink",
				"StoresData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> StoresSink"
			]
		}
	}
}